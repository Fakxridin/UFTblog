<% const userHasLiked = user && blog.likedBy.includes(user._id); %>
<%- include("./partials/head.ejs") %>

<body>
  <%- include("./partials/nav.ejs") %>

  <div class="details content">
    <h2><%= blog.title %></h2>
    <p class="created-at"><%= new Date(blog.createdAt).toLocaleDateString() %></p>
    
    <!-- Delete blog button -->
    <button class="delete" data-doc="<%= blog._id %>" aria-label="Delete Blog">
      <img src="/trashcan.svg" alt="Delete Blog">
    </button>

    <div class="likes-section">
      <button class="like-toggle-button" data-id="<%= blog._id %>">
        <%= userHasLiked ? 'Unlike' : 'Like' %>
      </button>
      <p><strong class="like-count"><%= blog.likes %></strong> Likes</p>
      <p>Liked by:
        <% blog.likedBy.forEach(userId => { 
             const user = users.find(u => u._id.toString() === userId.toString()); // Ensure proper comparison
             if (user) { // Ensure user exists
        %>
          <span><%= user.username %></span>
        <% 
             }
        }); %>
      </p>
    </div>

    <div class="content">
      <p><%= blog.body %></p>
    </div>

    <div class="error-message" style="color: red; display: none;"></div> <!-- For error messages -->
  </div>

  <%- include("./partials/footer.ejs") %>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      // Handle delete action
      const trashcan = document.querySelector('button.delete');
      if (trashcan) {
        trashcan.addEventListener('click', (e) => {
          if (confirm('Are you sure you want to delete this blog?')) {
            const endpoint = `/blogs/${trashcan.dataset.doc}`;
            fetch(endpoint, { method: 'DELETE' })
              .then(response => response.json())
              .then(data => {
                window.location.href = data.redirect; // Redirect after deletion
              })
              .catch(err => console.error('Error deleting blog:', err));
          }
        });
      }

      // Handle like/unlike action
      const likeToggleButton = document.querySelector('.like-toggle-button');
      const likeCountElement = document.querySelector('.like-count');
      const errorMessageElement = document.querySelector('.error-message');

      if (likeToggleButton) {
        likeToggleButton.addEventListener('click', async function () {
          const postId = likeToggleButton.getAttribute('data-id');
          const isLike = likeToggleButton.textContent === 'Like';
          try {
            likeToggleButton.disabled = true; // Prevent multiple clicks
            const response = await fetch(`/blogs/${postId}/${isLike ? 'like' : 'unlike'}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content // Include CSRF token if necessary
                },
                body: JSON.stringify({}),
            });

            const result = await response.json();

            if (response.ok) {
                // Update the like count
                likeCountElement.textContent = result.likes; // Update the like count displayed
                // Toggle button text based on current state
                likeToggleButton.textContent = isLike ? 'Unlike' : 'Like';
            } else {
                // Display an error message if something goes wrong
                console.error('Error:', result.message);
                errorMessageElement.textContent = result.message || 'An error occurred while processing your request.';
                errorMessageElement.style.display = 'block'; // Show error message
            }
          } catch (error) {
            console.error('Request failed:', error);
            errorMessageElement.textContent = 'There was an error processing your request.';
            errorMessageElement.style.display = 'block'; // Show error message
          } finally {
            likeToggleButton.disabled = false; // Re-enable button after processing
          }
        });
      }
    });
  </script>
</body>
</html>